# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  # Run CI when a new version tag is created
  create:
    tags:
      - v*
  # Run CI when a new commit is pushed
  push:
    branches: [ main, dev ]
  # Run CI when a new pull request is created
  pull_request:
    branches: [ main, dev ]

jobs:


  # Check if the project can be built without errors
  # Linting, tests and documentation generation is allowed to fail so that in
  # case of an error in them the core build and scripts are still verified
  build:

    strategy:
      matrix:
        node-version: [18.x]
        os: [ubuntu-latest,windows-latest]
        include:
          - os: ubuntu-latest
            os-name: linux
          - os: windows-latest
            os-name: windows

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies (apt - Linux)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt install nsis
    - name: Install dependencies (choco - Windows)
      if: matrix.os == 'windows-latest'
      run: choco install nsis
    - name: Install dependencies (NSIS-plugins - Windows)
      if: matrix.os == 'windows-latest'
      run: |
        $EnVarPluginArchive = Join-Path "example_04_modern_ui_plus_env_variables_logs_autouninstall" "EnVar.zip"
        $NsisDir = Join-Path "${env:ProgramFiles(x86)}" "NSIS"
        Expand-Archive $EnVarPluginArchive -DestinationPath $NsisDir -Force
    - name: Install dependencies (NSIS-plugins - Linux)
      if: matrix.os == 'ubuntu-latest'
      run: sudo unzip -f "example_04_modern_ui_plus_env_variables_logs_autouninstall/EnVar.zip" -d "/usr/share/nsis"
    - name: Run example 01
      run: makensis windows_installer.nsi
      working-directory: example_01_basics
    - name: Run example 02
      run: makensis windows_installer.nsi
      working-directory: example_02_license_uninstaller_components
    - name: Run example 03
      run: makensis windows_installer.nsi
      working-directory: example_03_modern_ui_and_multi_language
    - name: Run example 04
      # TODO Investigate why this fails on GitHub Actions but not on local WSL
      if: matrix.os == 'windows-latest'
      run: makensis windows_installer.nsi
      working-directory: example_04_modern_ui_plus_env_variables_logs_autouninstall
    - name: Run example 05
      run: makensis windows_installer.nsi
      working-directory: example_05_modern_ui_with_custom_pages
    - name: Save binary artifacts
      uses: actions/upload-artifact@v3
      with:
        name: created_installers-${{ matrix.os-name }}
        path: |
          example_01_basics/*.exe
          example_02_license_uninstaller_components/*.exe
          example_03_modern_ui_and_multi_language/*.exe
          example_04_modern_ui_plus_env_variables_logs_autouninstall/*.exe
          example_05_modern_ui_with_custom_pages/*.exe
        retention-days: 14
        if-no-files-found: error
